# (1)
#  DB-Init script is in './init/initdb.sql' it has been created executing
#  'docker run --rm guacamole/guacamole /opt/guacamole/bin/initdb.sh --postgres > ./init/initdb.sql'
#  once.
#
# The initial login to the guacamole webinterface is:
#
#     Username: guacadmin
#     Password: guacadmin
#

version: '3.0'

# networks
# create a network 'internal' in mode 'bridged'
networks:
  internal:
    driver: bridge

# services
services:
  # guacd
  guacd:
    container_name: guacd_compose
    image: docker.io/guacamole/guacd
    networks:
      internal:
    restart: always
    volumes:
    - ./drive:/drive:rw
    - ./record:/record:rw
  # postgres
  postgres:
    container_name: postgres
    environment:
      PGDATA: /var/lib/postgresql/data/guacamole
      POSTGRES_DB: guacamole_db
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: guacamole_user
    image: docker.io/postgres:15.2-alpine
    networks:
      internal:
    restart: always
    volumes:
    - ./init:/docker-entrypoint-initdb.d:z
    - ./data:/var/lib/postgresql/data:Z
# ldap
#-p 9090:9090,1389:1389,1686:1686 --rm -it 
  ldap:
    container_name: ldap
    image: docker.io/aescanero/openldap-node:0.1.3-linux-amd64
    entrypoint: /controller
    command: ["start","--config_file=/config/ldap.yaml"]
    ports:
      - 9090:9090
      - 1389:1389
      - 1686:1686
    networks:
      - internal
    restart: always
    volumes:
    - ./config:/config
    - ./var_ldap:/var/lib/ldap
    - ./ldap:/etc/ldap

#docker.io/aescanero/create-new-users-app-for-workshops:0.1.3-linux-amd64
  dashboard:
    container_name: dashboard
    image: docker.io/aescanero/create-new-users-app-for-workshops:0.1.3-linux-amd64
    entrypoint: /controller
    command: ["start","--config_file=/config/dashboard.yaml"]
    ports:
      - 8080:8080
    networks:
      - internal
    restart: always
    volumes:
    - ./config:/config

#dex
  dex:
    container_name: dex
    image: docker.io/dexidp/dex:v2.36.0-alpine
    command: ["/usr/local/bin/dex","serve","/config/dex.yaml"]
    ports:
      - 5556:5556
      - 5554:5554
      - 33223:33223
      - 47915:47915
    networks:
      - internal
    restart: always
    volumes:
    - ./config:/config

  # guacamole
  guacamole:
    container_name: guacamole
    depends_on:
    - guacd
    - postgres
    environment:
      GUACD_HOSTNAME: guacd
      POSTGRES_DATABASE: guacamole_db
      POSTGRES_HOSTNAME: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: guacamole_user
      LDAP_HOSTNAME: ldap
      LDAP_PORT: 1389 # O seguro: 636
      LDAP_USER_BASE_DN: DC=example,DC=org
      LDAP_USERNAME_ATTRIBUTE: uid
      LDAP_CONFIG_BASE_DN: DC=example,DC=org
      LDAP_ENCRYPTION_METHOD: none # O seguro: ssl, 
      LDAP_SEARCH_BIND_DN: cn=admin,DC=example,DC=org
      LDAP_SEARCH_BIND_PASSWORD: ${LDAP_SEARCH_BIND_PASSWORD}
    image: docker.io/guacamole/guacamole
    links:
    - guacd
    networks:
      internal:
    ports:
## enable next line if not using nginx
##    - 8080:8080/tcp # Guacamole is on :8080/guacamole, not /.
## enable next line when using nginx
    - 8080/tcp
    restart: always

########### optional ##############
  # nginx
  nginx:
   container_name: nginx
   restart: always
   image: docker.io/nginx
   volumes:
   - ./nginx/templates:/etc/nginx/templates:ro
   - ./config/ssl:/etc/nginx/ssl:ro
   ports:
   - 443:443
   links:
   - guacamole
   - dashboard
   networks:
     internal:
####################################################################################

  vault:
    image: vault:1.13.2
    container_name: vault
    hostname: vault
    ports:
      - 8200:8200
    volumes:
      - ./config/vault/config.hcl:/vault/config/config.hcl
      - vault-data:/vault/file/
    environment:
      - VAULT_ADDR=http://localhost:8200
    cap_add:
      - IPC_LOCK
    command: server
    restart: always

  vault-init:
    image: vault:1.13.2
    container_name: vault-init
    environment:
      - VAULT_ADDR=http://vault:8200
      - MY_VAULT_TOKEN=${MY_VAULT_TOKEN:-test}
    volumes:
      - ./config/vault/vault-root-token:/vault/file/vault-root-token
      - ./config/vault/init.sh:/usr/local/bin/vault-init.sh
      - vault-data:/vault/file/
    command: /usr/local/bin/vault-init.sh
    restart: on-failure
    depends_on:
      - vault
volumes:
  vault-data: